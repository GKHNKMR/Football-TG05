# .github/workflows/update.yml
name: weekly update predictions

on:
  schedule:
    - cron: "0 6 * * FRI"   # Her Cuma 06:00 UTC (Amsterdam'da Cuma 08:00 civarı)
  workflow_dispatch:        # Manuel tetikleme için

permissions:
  contents: write           # predictions.json dosyasını commit/push için gerekli

concurrency:
  group: update-predictions
  cancel-in-progress: false

jobs:
  build-and-update:
    runs-on: ubuntu-latest

    env:
      PYTHONUNBUFFERED: "1"
      # API anahtarlarını GitHub Secrets'tan çekin (Settings > Secrets and variables > Actions)
      API_FOOTBALL_KEY: ${{ secrets.API_FOOTBALL_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run prediction script
        # over05_prediction.py dosyan, predictions.json üretmeli
        run: |
          python over05_prediction.py

      - name: Validate JSON output
        run: |
          python - << 'PY'
          import json, sys, pathlib
          p = pathlib.Path("predictions.json")
          if not p.exists():
              print("ERROR: predictions.json not found", file=sys.stderr); sys.exit(1)
          try:
              data = json.loads(p.read_text(encoding="utf-8"))
              assert isinstance(data, list), "Root must be a list"
              # Temel alan kontrolleri (opsiyonel)
              if data:
                  sample = data[0]
                  for key in ("league","home","away","p_over_0_5"):
                      if key not in sample:
                          raise AssertionError(f"Missing key: {key}")
              print("predictions.json OK - items:", len(data))
          except Exception as e:
              print("ERROR:", e, file=sys.stderr); sys.exit(1)
          PY

      - name: Commit and push if changed
        run: |
          set -e
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add predictions.json
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Weekly predictions update: $(date -u +'%Y-%m-%d %H:%M UTC')"
            git push
          fi
